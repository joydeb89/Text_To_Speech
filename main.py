import streamlit as st
import requests
import os
from dotenv import load_dotenv
from gtts import gTTS  # Import gTTS for text-to-speech functionality
from io import BytesIO

# Load environment variables from .env file
load_dotenv()

# Set page configuration
st.set_page_config(page_title="‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶ü‡ßá‡¶ï‡ßç‡¶∏‡¶ü ‡¶ü‡ßÅ ‡¶∏‡ßç‡¶™‡¶ø‡¶ö", page_icon="üéôÔ∏è")
st.title("üéôÔ∏è ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶ü‡ßá‡¶ï‡ßç‡¶∏‡¶ü ‡¶ü‡ßÅ ‡¶∏‡ßç‡¶™‡¶ø‡¶ö")
st.write("‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶ü‡ßá‡¶ï‡ßç‡¶∏‡¶ü ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶® ‡¶è‡¶¨‡¶Ç ‡¶∂‡ßÅ‡¶®‡ßÅ‡¶® ‡¶¨‡¶æ ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®‡•§")

# Input text for TTS
text = st.text_area("‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶ü‡ßá‡¶ï‡ßç‡¶∏‡¶ü", placeholder="‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®...", height=150)

# Fetch Generation Info button
if st.button("üé§ ‡¶™‡ßç‡¶∞‡¶ú‡¶®‡ßç‡¶Æ ‡¶§‡¶•‡ßç‡¶Ø ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®"):
    api_key = os.getenv("X_API_KEY")  # Get API key from environment variable
    if not api_key:
        st.error("API ‡¶ï‡ßÄ ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßá ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø‡•§ .env ‡¶´‡¶æ‡¶á‡¶≤‡ßá X_API_KEY ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®‡•§")
    else:
        try:
            # API URL and headers
            url = "https://prod-api2.desivocal.com/dv/api/v0/tts_api/generation_info"
            headers = {"X_API_KEY": api_key}

            # Make GET request to DesiVocal API
            response = requests.get(url, headers=headers)

            # Check for a successful response
            if response.status_code == 200:
                # Display response text in Streamlit
                st.success("‚úÖ ‡¶™‡ßç‡¶∞‡¶ú‡¶®‡ßç‡¶Æ ‡¶§‡¶•‡ßç‡¶Ø ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶ó‡ßá‡¶õ‡ßá:")
                st.code(response.text)
            else:
                st.error(f"‚ö†Ô∏è API ‡¶Ö‡¶®‡ßÅ‡¶∞‡ßã‡¶ß ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶• ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§ Status: {response.status_code}")
                st.text(response.text)
        except Exception as e:
            st.error(f"‡¶Ö‡¶®‡ßÅ‡¶∞‡ßã‡¶ß ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶• ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá: {e}")

# Text-to-Speech functionality (same as previous code)
col1, col2 = st.columns([1, 1])

with col1:
    if st.button("üéß ‡¶∂‡ßã‡¶®‡¶æ‡¶®"):
        if not text.strip():
            st.warning("‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶ü‡ßá‡¶ï‡ßç‡¶∏‡¶ü ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®‡•§")
        else:
            with st.spinner("‡¶Ö‡¶°‡¶ø‡¶ì ‡¶§‡ßà‡¶∞‡¶ø ‡¶π‡¶ö‡ßç‡¶õ‡ßá..."):
                try:
                    tts = gTTS(text=text, lang='bn')
                    mp3_fp = BytesIO()
                    tts.write_to_fp(mp3_fp)
                    mp3_fp.seek(0)

                    st.audio(mp3_fp, format="audio/mp3")

                    st.download_button(
                        label="‚¨áÔ∏è ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®",
                        data=mp3_fp,
                        file_name="bengali_speech.mp3",
                        mime="audio/mp3"
                    )
                except Exception as e:
                    st.error(f"‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø: {e}")
